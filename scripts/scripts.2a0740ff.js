!function(exports){function buildRoles(roles){var bitMask="01",userRoles={};for(var role in roles){var intCode=parseInt(bitMask,2);userRoles[roles[role]]={bitMask:intCode,title:roles[role]},bitMask=(intCode<<1).toString(2)}return userRoles}function buildAccessLevels(accessLevelDeclarations,userRoles){var accessLevels={};for(var level in accessLevelDeclarations)if("string"==typeof accessLevelDeclarations[level])if("*"==accessLevelDeclarations[level]){var resultBitMask="";for(var role in userRoles)resultBitMask+="1";accessLevels[level]={bitMask:parseInt(resultBitMask,2)}}else console.log("Access Control Error: Could not parse '"+accessLevelDeclarations[level]+"' as access definition for level '"+level+"'");else{var resultBitMask=0;for(var role in accessLevelDeclarations[level])userRoles.hasOwnProperty(accessLevelDeclarations[level][role])?resultBitMask|=userRoles[accessLevelDeclarations[level][role]].bitMask:console.log("Access Control Error: Could not find role '"+accessLevelDeclarations[level][role]+"' in registered roles while building access for '"+level+"'");accessLevels[level]={bitMask:resultBitMask}}return accessLevels}var config={roles:["public","user","admin"],accessLevels:{"public":"*",anon:["public"],user:["user","admin"],admin:["admin"]}};exports.userRoles=buildRoles(config.roles),exports.accessLevels=buildAccessLevels(config.accessLevels,exports.userRoles)}("undefined"==typeof exports?this.routingConfig={}:exports),angular.module("bswebApp",["ngAnimate","ngCookies","ngSanitize","ngTouch","ui.router","ui.utils","ui.bootstrap","truncate","restangular","ngStorage","duScroll"]).config(["$httpProvider","$locationProvider","RestangularProvider",function($httpProvider,$locationProvider,RestangularProvider){$httpProvider.defaults.xsrfCookieName="csrftoken",$httpProvider.defaults.xsrfHeaderName="x-csrftoken",$httpProvider.defaults.allowCredentials="x-csrftoken",RestangularProvider.setRequestSuffix("/"),RestangularProvider.addResponseInterceptor(function(data,operation,what,url,response){var extractedData;return"getList"===operation?(extractedData=data.results,extractedData.count=data.count,extractedData.previous=data.previous,extractedData.next=data.next,response.config.params&&response.config.params.page&&(extractedData.page=response.config.params.page)):extractedData=data,extractedData})}]).run(function($rootScope,$cookies,$state,Restangular,Auth,Settings){Restangular.setBaseUrl(Settings.bsapi.url),$rootScope.$on("$stateChangeStart",function(event,toState){toState.data&&!Auth.isAuthorized(toState.data.accessLevel)&&(event.preventDefault(),$state.go("home"))})}),angular.module("bswebApp").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){var access=routingConfig.accessLevels;$urlRouterProvider.otherwise("/world/index.html"),$stateProvider.state("404",{url:"/404/",templateUrl:"404"}),$stateProvider.state("community",{"abstract":!0,controller:"CommunityCtrl",url:"/:slug",template:"<ui-view />",resolve:{slug:["$stateParams",function($stateParams){return $stateParams.slug}]}}),$stateProvider.state("community.home",{url:"/index.html",controller:"HomeCtrl",templateUrl:"views/main.html"}),$stateProvider.state("about",{url:"/about/",templateUrl:"views/about.html"}),$stateProvider.state("anon",{"abstract":!0,template:"<ui-view />",data:{accessLevel:access.anon}}).state("anon.login",{url:"/login/",controller:"LoginCtrl",templateUrl:"views/login.html"}).state("anon.register",{url:"/register/",controller:"RegisterCtrl",templateUrl:"views/register.html"}),$stateProvider.state("community.books",{"abstract":!0,url:"/books",template:"<ui-view />"}).state("community.books.list",{url:"/?categories",controller:"BookCtrl",templateUrl:"views/book.list.html"}).state("community.books.detail",{url:"/:isbn",controller:"BookDetailCtrl",templateUrl:"views/book.detail.html"}).state("community.search",{url:"/search/?q",templateUrl:"views/book.list.html",controller:"SearchCtrl"}),$stateProvider.state("community.user",{"abstract":!0,templateUrl:"views/users/base.html",url:"/manage",data:{accessLevel:access.user}}).state("community.user.summary",{url:"/summary",templateUrl:"views/users/summary.html"}).state("community.user.loanrequest",{url:"/loan-request",controller:"LoanRequestCtrl",templateUrl:"views/users/loanrequest.html"}).state("community.user.channel",{url:"/channel/:channelId",controller:"ChannelCtrl",templateUrl:"views/users/channel.html"}).state("community.user.reputation",{url:"/reputation",templateUrl:"views/users/reputation.html"}).state("community.user.profile",{url:"/profile",templateUrl:"views/users/profile.html"}).state("community.user.settings",{url:"/settings",templateUrl:"views/users/settings.html"}).state("community.user.book",{controller:"UserBookCtrl",url:"/book",templateUrl:"views/users/book.html"}).state("community.user.book.mine",{url:"/mine",controller:"MyBookCtrl",templateUrl:"views/users/book.mine.html"}).state("community.user.book.theirs",{url:"/borrowed",templateUrl:"views/users/book.theirs.html"}),$stateProvider.state("community.admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{accessLevel:access.admin}})}]),angular.module("bswebApp").controller("NavbarCtrl",["$scope","$state","$stateParams","$location","$timeout","Auth","Community",function($scope,$state,$stateParams,$location,$timeout,Auth,Community){var searchTimeout;$scope.community=Community.objects,$scope.currentCommunity=Community.current,Community.getAll().then(function(communities){$scope.community.all=communities}),$scope.search=function(){$state.go("community.search",{q:$scope.query}),$scope.$apply()},$scope.$watch("query",function(){searchTimeout&&$timeout.cancel(searchTimeout),$scope.searchForm.$dirty&&(searchTimeout=$timeout($scope.search,500))}),$scope.site={name:"BookCycle",logo:"/logo.png"},$scope.auth=Auth,$scope.login=function(){Auth.login({username:$scope.username,password:$scope.password})},$scope.logout=function(){Auth.logout()}}]),angular.module("bswebApp").controller("SearchCtrl",["$scope","$location","$document","Book",function($scope,$location,$document,Book){$scope.page={title:"Search Result"},$scope.paginator={totalItems:0,currentPage:1,itemPerPage:20,maxSize:10,pageChanged:function(){Book.search($location.search().q,$scope.paginator.currentPage).then(function(result){$scope.paginator.totalItems=result.count,$scope.paginator.currentPage=result.page,$scope.books=result}).then(function(){$document.scrollTop(0,300)})}},$scope.paginator.pageChanged()}]),angular.module("bswebApp").controller("LoginCtrl",["$scope","$window","Auth",function($scope,$window,Auth){$scope.isSignedIn=!1,$scope.token=null,$scope.login=function(){Auth.login({username:$scope.username,password:$scope.password,remember:$scope.remember},function(){$scope.isSignedIn=!0},function(error){console.log("Error: "+error)})},$scope.signInBsAuth=function(){$window.open(Settings.bsapi.authorizationEndpoint)},$scope.processAuth=function(authResult){authResult.access_token&&($scope.isSignedIn=!0)}}]),angular.module("bswebApp").factory("Book",["Restangular",function(Restangular){var books=Restangular.service("books");return{providerSearch:function(query){return Restangular.all("search").customGETLIST("provider",{q:query})},search:function(query,page){return Restangular.all("search").getList({q:query,page:page,with_owner:"True"})},all:function(){return books},get:function(isbn){return books.one(isbn).get().$object}}}]),angular.module("bswebApp").service("Auth",["$http","$sessionStorage","Restangular","Settings","User",function($http,$sessionStorage,Restangular,Settings,User){var userRoles=(routingConfig.accessLevel,routingConfig.userRoles);$sessionStorage.$default({user:{username:"",role:userRoles.public},token:null});var currentUser=$sessionStorage.user,setUser=function(user){$sessionStorage.user=user,currentUser=user},getUser=function(){return currentUser},clearUser=function(){delete $sessionStorage.user,currentUser={username:"",role:userRoles.public}},setTokenHeader=function(token){return token?void($http.defaults.headers.common.Authorization="Token "+token):void delete $http.defaults.headers.common.Authorization},setToken=function(token){token?$sessionStorage.userToken=token:delete $sessionStorage.userToken,setTokenHeader(token)},getUserToken=function(){return $sessionStorage.userToken};return setToken(getUserToken()),{isAuthorized:function(accessLevel){return accessLevel.bitMask&currentUser.role.bitMask},getUser:getUser,login:function(credential){Restangular.oneUrl("token-auth",Settings.bsapi.tokenAuthEndpoint).post("",credential).then(function(result){return setToken(result.token),User.get(credential.username)}).then(function(result){var user=Restangular.copy(result);user.role=userRoles.user,setUser(user)})},logout:function(){setToken(null),clearUser()},isLogin:function(){return getUserToken()?!0:!1}}}]),angular.module("bswebApp").constant("Settings",{bsapi:{url:"http://128.199.179.181",get tokenAuthEndpoint(){return this.url+"/token-auth/"},get oauthAuthorizationEndpoint(){return this.url+"/oauth2/authorize/"},get oauthTokenEndpoint(){return this.url+"/oauth2/token/"},get loginEndpoint(){return this.url+"/auth/login/"},get logoutEndpoint(){return this.url+"/auth/logout/"},clientId:"gXFe3yEjlvz-a8ilXfUzkrV4rHq7UCUHcjIPrUeF",clientSecret:"UKcCiKxWVMT.opZJCF62w?IC.;wugUG.3yGQTZAC8=pCZHQRSccUeurWBj2OhKl?-WM1F-jGTL4fpBtCF;DqqEMr7wB0x0AHTkEzWmK4FEZmV8UhMTHRiQr=yYdfWzNU",redirectUri:"http://127.0.0.1:9000"},google:{},facebook:{}}).factory("BSAPI",function(){return{}}),angular.module("bswebApp").controller("BookCtrl",["$scope","$document","$stateParams","Book",function($scope,$document,$stateParams,Book){$scope.page={title:"Browse Books Category"},$scope.paginator={totalItems:0,currentPage:1,itemPerPage:20,maxSize:10,pageChanged:function(){Book.all().getList({categories:$stateParams.categories,page:$scope.paginator.currentPage,with_owner:"True"}).then(function(result){$scope.paginator.totalItems=result.count,$scope.paginator.currentPage=result.page,$scope.books=result}).then(function(){$document.scrollTop(0,300)})}},$scope.paginator.pageChanged()}]),angular.module("bswebApp").controller("BookDetailCtrl",["$scope","$modal","$stateParams","$document","Book","UserBook","Reservation","alerts",function($scope,$modal,$stateParams,$document,Book,UserBook,Reservation,alerts){$scope.book=Book.get($stateParams.isbn),UserBook.getList({isbn:$stateParams.isbn}).then(function(result){$scope.usersBook=result}),$scope.requestBook=function(userbookId){Reservation.makeRequest(userbookId).then(function(){alerts.push({type:"success",msg:"Book Request Sent!!"})},function(){alerts.push({type:"danger",msg:"Book Request Unsuccessful!!"})}),$document.scrollTop(0,300)}}]),angular.module("bswebApp").controller("RegisterCtrl",["$scope",function(){}]),angular.module("bswebApp").controller("UserBookCtrl",["$scope",function(){}]),angular.module("bswebApp").factory("User",["Restangular",function(Restangular){var users=Restangular.service("users");return{get:function(username){return users.one(username).get()}}}]),angular.module("bswebApp").controller("MyBookCtrl",["$scope","$modal","MyBook",function($scope,$modal,MyBook){$scope.myBooks=MyBook.getList().$object,$scope.remove=function(myBook){MyBook.remove(myBook.id).then(function(){$scope.myBooks.splice($scope.myBooks.indexOf(myBook),1)})},$scope.openAddBookModal=function(){$modal.open({templateUrl:"views/users/book.mine.add.html",controller:"MyBookAddCtrl",size:"lg",resolve:{myBooks:function(){return $scope.myBooks}}})}}]),angular.module("bswebApp").controller("MyBookAddCtrl",["$scope","$q","MyBook","Book","myBooks",function($scope,$q,MyBook,Book,myBooks){$scope.searchInProgress=!1,$scope.$watch(function(){return myBooks},function(books){$scope.myBookIsbn=books.map(function(myBook){return myBook.book.isbn})}),$scope.searchForm={query:""},$scope.searchResult={books:[]},$scope.providerSearch=function(){$scope.searchInProgress=!0,Book.search($scope.searchForm.query).then(function(books){return $scope.searchResult.books=books,Book.providerSearch($scope.searchForm.query)},function(){$scope.searchInProgress=!1,$q.reject()}).then(function(books){$scope.searchResult.books=books.concat($scope.searchResult.books),$scope.searchInProgress=!1},function(){$scope.searchInProgress=!1,$q.reject()})},$scope.add=function(book){MyBook.add(book.isbn).then(function(myBook){myBooks.push(myBook)})},$scope.isOwned=function(book){return-1!==$scope.myBookIsbn.indexOf(book.isbn)},$scope.done=function(){$scope.$dismiss("Done")}}]),angular.module("bswebApp").factory("UserBook",["Restangular",function(Restangular){var UserBook=Restangular.service("user-books");return{add:function(isbn){return UserBook.post(isbn)},remove:function(userBookId){return UserBook.one(userBookId).remove()},getList:function(params){return UserBook.getList(params)},latest:function(){return UserBook.getList({ordering:"-created_at"})}}}]).factory("MyBook",["Restangular",function(Restangular){var MyBook=Restangular.service("my-books");return{add:function(isbn){return MyBook.post({isbn:isbn})},remove:function(userBookId){return MyBook.one(userBookId).remove()},getList:function(params){return MyBook.getList(params)}}}]),angular.module("bswebApp").controller("HomeCtrl",["$scope","UserBook","Category",function($scope,UserBook,Category){$scope.data={},Category.withOwner().then(function(result){$scope.data.categories=result}),UserBook.latest().then(function(result){var books=result.reduce(function(accumulated,current){return accumulated.concat(current.book)},[]);$scope.data.books=books})}]),angular.module("bswebApp").factory("Category",["Restangular",function(Restangular){var categories=Restangular.service("categories");return{all:function(){return categories.getList()},withOwner:function(){return categories.getList({with_owner:"True"})}}}]),angular.module("bswebApp").directive("holderFix",function(){return{link:function(scope,element){Holder.run({images:element[0],nocss:!0})}}}),angular.module("bswebApp").factory("Community",["$q","Restangular",function($q,Restangular){var current={community:null};return{current:current,objects:[],get:function(slug){return Restangular.one("communities",slug).get().then(function(community){return community})},getAll:function(){var self=this;return this.objects.length?$q.when(this.objects):Restangular.all("communities").getList().then(function(communities){return self.objects=_.map(communities,function(community){return community}),self.objects})}}}]),angular.module("bswebApp").controller("CommunityCtrl",["$scope","$stateParams","Auth","Community","Membership",function($scope,$stateParams,Auth,Community,Membership){Community.get($stateParams.slug).then(function(community){Community.current.community=community}),$scope.$watch(function(){return Auth.isLogin()},function(val){1==val&&Membership.findByCommunity(Community.current.community).then(function(memberships){for(var i=0;i<memberships.length;i++)Membership.objects.push(memberships[i])})})}]),angular.module("bswebApp").value("alerts",[]),angular.module("bswebApp").controller("AlertCtrl",["$scope","$timeout","alerts",function($scope,$timeout,alerts){$scope.alerts=alerts,$scope.$on("$stateChangeStart",function(){alerts.length=0}),$scope.closeAlert=function(index){alerts.splice(index,1)}}]),angular.module("bswebApp").factory("Reservation",["Restangular","Membership",function(Restangular,Membership){var reservation=Restangular.service("reservation");return{makeRequest:function(userbookId){return reservation.post({owner_book:userbookId,borrower_membership:Membership.getId()})},all:function(){return reservation.getList()},approve:function(loanrequestId){return reservation.one(loanrequestId).post("approve")},reject:function(loanrequestId){return reservation.one(loanrequestId).post("reject")}}}]),angular.module("bswebApp").factory("Membership",["Restangular","Community","Auth",function(Restangular,Community,Auth){var current={membership:null};return{current:current,objects:[],getId:function(){return current.membership?current.membership.id:void 0},findByCommunity:function(){return Auth.isLogin()?Restangular.all("membership").getList({username:Auth.getUser().username}).then(function(memberships){return current.membership=memberships.filter(function(membership){return membership.user===Auth.getUser().id})[0],memberships}):void 0}}}]),angular.module("bswebApp").controller("LoanRequestCtrl",["$scope","Reservation","Channel","alerts",function($scope,Reservation){Reservation.all().then(function(result){$scope.loanrequests=result})}]),angular.module("bswebApp").factory("Channel",["Restangular",function(Restangular){var Channel=Restangular.service("channels");return{create:function(loanrequestId){return Channel.post({loan_request:loanrequestId})},init:function(channelId){return Channel.one(channelId).get()},sendMessage:function(channelId,content){return Restangular.service("messages").post({channel:channelId,content:content})},updateAppointment:function(channelId,date){var channel=Channel.one(channelId);return channel.appointment_at=date,channel.patch()}}}]),angular.module("bswebApp").controller("ChannelCtrl",["$scope","$stateParams","$document","Channel","alerts",function($scope,$stateParams,$document,Channel,alerts){$scope.channel={id:$stateParams.channelId},$scope.transaction={step:{approval:!1,appointment:!1,handover:!0,status:!1,done:!1},isDone:!1},Channel.init($scope.channel.id).then(function(result){$scope.channel.messages=result.message_set,$scope.channel.appointment=new Date(result.appointment_at)}),$scope.sendMessage=function(){Channel.sendMessage($scope.channel.id,$scope.channel.content).then(function(result){$scope.channel.messages.push(result),alerts.push({type:"success",msg:"Message Sent!!!"}),$scope.content="",$document.scrollTop(0,500)})},$scope.updateAppointment=function(){Channel.updateAppointment($scope.channel.id,$scope.channel.appointment).then(function(){alerts.push({type:"success",msg:"Appointment Updated!"})})}}]),angular.module("bswebApp").controller("LoanRequestItemCtrl",["$scope","$q","Reservation","Channel","alerts",function($scope,$q,Reservation,Channel,alerts){$scope.approve=function(){Reservation.approve($scope.loanrequest.id).then(function(loanrequest){return alerts.push({type:"success",msg:loanrequest.status_display}),$scope.loanrequest.status=loanrequest.status,$scope.loanrequest.channel?$q.reject("channel already created"):Channel.create($scope.loanrequest.id)},function(error){alerts.push({type:"warning",msg:error.data.errors})}).then(function(channel){$scope.loanrequest.channel=channel.id})},$scope.reject=function(){Reservation.reject($scope.loanrequest.id).then(function(result){$scope.loanrequest.status=result.status,alerts.push({type:"success",msg:result.status_display})},function(error){alerts.push({type:"warning",msg:error.data.errors})})},$scope.isMyBook=function(){return $scope.loanrequest.is_my_book}}]);